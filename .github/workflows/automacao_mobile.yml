name: Android Emulator Test

on:
  workflow_dispatch:
  push:

env:
  ANDROID_ARCH: x86_64
  ANDROID_TARGET: google_apis_playstore
  API_LEVEL: 33
  ANDROID_BUILD_TOOLS_VERSION: 33.0.2
  EMULATOR_NAME: nexus
  EMULATOR_TIMEOUT: 350
  APPIUM_PORT: 4725

jobs:
  robot-test:
    timeout-minutes: 20
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Robot Framework and dependencies
        run: |
          pip install robotframework
          pip install robotframework-appiumlibrary
          pip install -r requirements.txt

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install Appium
        run: |
          npm install -g appium
          appium driver install uiautomator2

      - name: Configure Android environment
        run: |
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

      - name: Install Android SDK packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager --install "system-images;android-${{ env.API_LEVEL }};${{ env.ANDROID_TARGET }};${{ env.ANDROID_ARCH }}"
          sdkmanager --install "platforms;android-${{ env.API_LEVEL }}"
          sdkmanager --install "build-tools;${{ env.ANDROID_BUILD_TOOLS_VERSION }}"
          sdkmanager --install "platform-tools"
          sdkmanager --install "emulator"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd \
            --force \
            --name ${{ env.EMULATOR_NAME }} \
            --package "system-images;android-${{ env.API_LEVEL }};${{ env.ANDROID_TARGET }};${{ env.ANDROID_ARCH }}" \
            --abi "${{ env.ANDROID_TARGET }}/${{ env.ANDROID_ARCH }}"

      - name: Start Appium server
        run: |
          nohup appium -p ${{ env.APPIUM_PORT }} -pa /wd/hub --log-timestamp --local-timezone > appium.log 2>&1 &
          sleep 10
          cat appium.log

      - name: Launch emulator and run tests
        run: |
          # Start emulator in background
          emulator -avd ${{ env.EMULATOR_NAME }} \
            -no-audio \
            -no-window \
            -no-snapshot \
            -gpu swiftshader_indirect \
            -no-boot-anim &
          
          # Wait for emulator to be ready
          adb wait-for-device
          timeout ${{ env.EMULATOR_TIMEOUT }} bash -c 'until adb shell getprop sys.boot_completed 2>/dev/null | grep -q 1; do sleep 5; echo "Waiting for emulator..."; done'
          
          # Unlock device
          adb shell input keyevent 82
          
          # Install APK
          adb install -t -g apps/app.apk
          
          # Run Robot Framework tests
          robot -d reports \
            -v APPIUM_PORT:${{ env.APPIUM_PORT }} \
            -v PLATFORM_VERSION:${{ env.API_LEVEL }} \
            -v DEVICE_NAME:${{ env.EMULATOR_NAME }} \
            test_cases/

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            reports/
            appium.log