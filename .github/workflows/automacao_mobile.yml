name: Android App Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  android-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: üîß Install Android SDK
        run: |
          export ANDROID_HOME="$HOME/android-sdk"
          mkdir -p "$ANDROID_HOME"
          cd "$ANDROID_HOME"
          
          # Download command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip -q commandlinetools-linux-10406996_latest.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          rm commandlinetools-linux-10406996_latest.zip
          
          # Set environment variables
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV

      - name: üì¶ Install Android Packages
        run: |
          # Accept licenses
          mkdir -p "$ANDROID_HOME/licenses"
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_HOME/licenses/android-sdk-license"
          
          # Install required components
          yes | sdkmanager --sdk_root=$ANDROID_HOME \
            "platform-tools" \
            "emulator" \
            "platforms;android-30" \
            "system-images;android-30;google_apis;x86_64"
          
          # Verify installations
          adb version
          emulator -version

      - name: üì± Start Android Emulator
        run: |
          # Create AVD
          echo "no" | avdmanager create avd \
            --name test \
            --package "system-images;android-30;google_apis;x86_64" \
            --device "pixel_4" \
            --force
          
          # Start emulator with proper options
          nohup emulator \
            -avd test \
            -no-audio \
            -no-window \
            -gpu swiftshader_indirect \
            -camera-back none \
            -camera-front none > /dev/null 2>&1 &
            
          # Wait for device and verify connection
          adb start-server
          adb kill-server
          adb start-server
          
          echo "Waiting for device..."
          adb wait-for-device
          
          # Additional checks for device readiness
          while true; do
            device_status=$(adb devices | grep emulator-5554 | awk '{print $2}')
            if [ "$device_status" = "device" ]; then
              break
            fi
            echo "Device status: $device_status - waiting..."
            sleep 5
          done
          
          # Wait for full boot completion
          while [ "$(adb shell getprop sys.boot_completed | tr -d '\r')" != "1" ]; do
            sleep 5
            echo "Waiting for emulator to fully boot..."
          done
          
          # Disable animations
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0
          
          # Verify device is online
          adb devices

      - name: üåê Install Appium
        run: |
          sudo npm install -g appium
          appium driver install uiautomator2
          appium --version

      - name: üì¶ Install Python Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        run: |
          pip install -r requirements.txt
          pip install robotframework robotframework-appiumlibrary

      - name: üì§ Install APK
        run: |
          adb install apps/app.apk
          sleep 10  # Wait for installation to complete

      - name: üß™ Run Tests
        run: |
          robot \
            --variable APPIM_URL:http://localhost:4723/wd/hub \
            --variable PLATFORM_NAME:Android \
            --variable DEVICE_NAME:emulator-5554 \
            --variable APP_PATH:$GITHUB_WORKSPACE/apps/app.apk \
            --variable APP_PACKAGE:br.gov.mt.cepromat.mtcidadao \
            --variable APP_ACTIVITY:br.gov.mt.cepromat.mtcidadao.MainActivity \
            test_cases/

      - name: üì§ Upload Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            output.xml
            report.html
            log.html