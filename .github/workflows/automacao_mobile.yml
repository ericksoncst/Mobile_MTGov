name: Android Emulator Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  robot-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🛠️ Setup Git LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 🔍 Verify APK
        run: |
          if [ ! -f ./apps/app.apk ]; then
            echo "❌ APK missing"
            exit 1
          fi
          if file ./apps/app.apk | grep -q "text"; then
            echo "❌ APK is a text file (Git LFS issue?)"
            git lfs install
            git lfs pull
            exit 1
          fi
          echo "✅ APK verified"

      - name: 🐳 Build Docker Image
        run: docker build -t android-tests .

      - name: 🚀 Launch Test Environment
        run: |
          mkdir -p ./results
          docker run \
            --name test-container \
            -p 4723:4723 \
            -p 5554:5554 \
            -p 5555:5555 \
            --device /dev/kvm \
            --shm-size=2g \
            -d \
            android-tests
          
          # Wait for container to stabilize
          sleep 15
          docker ps | grep test-container || { echo "❌ Container failed to start"; exit 1; }

      - name: ⏱️ Verify Services
        timeout-minutes: 5
        run: |
          end=$((SECONDS+300))
          while [ $SECONDS -lt $end ]; do
            if docker exec test-container sh -c "test -f /app/emulator.log && grep -q '✅ Emulator ready' /app/emulator.log"; then
              echo "✅ Emulator verified"
              break
            fi
            sleep 10
          done
          [ $SECONDS -ge $end ] && echo "❌ Verification timeout" && exit 1

      - name: 🧪 Run Tests
        run: |
          docker exec test-container /bin/bash -c "\
            source ./venv/bin/activate && \
            robot --outputdir /app/test_results /app/test_cases"
          docker cp test-container:/app/test_results ./results/

      - name: 📦 Gather Logs
        if: always()
        run: |
          docker logs test-container > container.log 2>&1
          docker exec test-container cat /app/emulator.log > emulator.log
          docker exec test-container cat /app/appium.log > appium.log

      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            results/
            *.log

      - name: 🧹 Cleanup
        if: always()
        run: docker rm -f test-container || true