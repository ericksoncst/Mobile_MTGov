name: Android Emulator Tests with Robot Framework

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  robot-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # PHASE 1: SETUP
      - name: 🏗️ Setup Environment
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      
      - name: 🧾 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Build Docker Image
        run: docker build -t robot-tests .

      # PHASE 2: EMULATOR START
      - name: 🚀 Start Emulator
        id: emulator-start
        run: |
          mkdir -p ./results
          # Start container with health check
          docker run \
            --name emulator-container \
            -p 5554:5554 \
            -p 5555:5555 \
            -p 4723:4723 \
            -e TZ=UTC \
            --device /dev/kvm \
            --cap-add=NET_ADMIN \
            --shm-size=2g \
            --health-cmd "adb shell getprop sys.boot_completed | grep 1" \
            --health-interval 5s \
            --health-retries 30 \
            -d \
            robot-tests \
            /bin/bash -c "\
              \$ANDROID_HOME/emulator/emulator -avd testEmulator -no-audio -no-window -no-snapshot -verbose -ports 5554,5555 \
              > /emulator.log 2>&1 & \
              echo \$! > /emulator.pid; \
              tail -f /dev/null"  # Keep container running

          # Wait for container to be healthy
          echo "Waiting for emulator to boot..."
          timeout 5m bash -c 'while [ \"$(docker inspect -f {{.State.Health.Status}} emulator-container)\" != \"healthy\" ]; do sleep 5; done'
          
          # Verify emulator is running
          docker exec emulator-container test -f /emulator.pid || (echo "::error::Emulator failed to start"; exit 1)
          echo "Emulator started successfully"

      # PHASE 3: APPIUM & TESTS
      - name: 🧪 Run Appium & Tests
        run: |
          # Start Appium
          docker exec -d emulator-container /bin/bash -c "\
            appium --relaxed-security --address 0.0.0.0 --port 4723 --log-timestamp \
            > /appium.log 2>&1 &"
          
          # Wait for Appium to be ready
          echo "Waiting for Appium..."
          timeout 2m bash -c 'until docker exec emulator-container curl -s http://localhost:4723/wd/hub/status >/dev/null; do sleep 5; done'
          
          # Run tests
          echo "Starting tests..."
          docker exec emulator-container /bin/bash -c "\
            source ./venv/bin/activate && \
            robot --outputdir test_results test_cases"
          
          # Copy results
          docker cp emulator-container:/app/test_results ./results/

      # PHASE 4: ARTIFACTS
      - name: 📦 Upload Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            results/output.xml
            results/report.html
            results/log.html
            results/*.png

      - name: 📜 Get Logs
        if: always()
        run: |
          docker logs emulator-container > container.log 2>&1 || true
          docker cp emulator-container:/emulator.log ./emulator.log || true
          docker cp emulator-container:/appium.log ./appium.log || true

      # PHASE 5: CLEANUP
      - name: 🧹 Cleanup
        if: always()
        run: |
          docker stop emulator-container || true
          docker rm -f emulator-container || true