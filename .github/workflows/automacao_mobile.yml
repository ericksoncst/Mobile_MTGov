name: Continuous Integration

on:
  push:
  workflow_dispatch:

jobs:
  execute_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get root directory
        id: root
        run: echo "ROOT=$(pwd)" >> $GITHUB_ENV

      - name: Use Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install Robot Framework and dependencies
        run: |
          pip install robotframework
          pip install robotframework-appiumlibrary
          pip install -r ${{ env.ROOT }}/requirements.txt

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          android-sdk-file: commandlinetools-linux-9477386_latest.zip

      - name: Configure Android environment
        run: |
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_AVD_HOME=$ANDROID_HOME/avd" >> $GITHUB_ENV
          mkdir -p $ANDROID_HOME/avd

      - name: Accept licenses and install tools
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "emulator" "platforms;android-30"
          sdkmanager "system-images;android-30;default;x86"
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Create and verify AVD
        run: |
          echo no | avdmanager create avd \
            -n TestAVD \
            -k "system-images;android-30;default;x86" \
            --device "Nexus 5" \
            --path $ANDROID_AVD_HOME/TestAVD.avd
          
          # Modify config.ini to disable problematic features
          echo "hw.cpu.ncore=2" >> $ANDROID_AVD_HOME/TestAVD.avd/config.ini
          echo "hw.cpu.arch=x86" >> $ANDROID_AVD_HOME/TestAVD.avd/config.ini
          echo "hw.cpu.model=athlon" >> $ANDROID_AVD_HOME/TestAVD.avd/config.ini
          echo "vm.heapSize=256" >> $ANDROID_AVD_HOME/TestAVD.avd/config.ini
          
          # Verify AVD creation
          emulator -list-avds
          cat $ANDROID_AVD_HOME/TestAVD.avd/config.ini

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install Appium
        run: |
          npm install -g appium
          appium driver install uiautomator2

      - name: Start Appium server
        run: |
          nohup appium -p 4725 -pa /wd/hub --log-timestamp --local-timezone > ${{ env.ROOT }}/appium.log 2>&1 &
          sleep 10
          cat ${{ env.ROOT }}/appium.log

      - name: Run tests
        run: |
          # Start emulator with maximum compatibility settings
          $ANDROID_HOME/emulator/emulator \
            -avd TestAVD \
            -no-audio \
            -no-window \
            -no-snapshot \
            -no-boot-anim \
            -no-accel \
            -gpu off \
            -memory 2048 \
            -partition-size 1024 \
            -feature -GLESDynamicVersion \
            -skip-adb-auth \
            -no-snapstorage \
            -no-jni \
            -qemu -m 2048 -enable-kvm &
          
          # Wait for emulator with timeout
          timeout 300 bash -c 'until adb shell getprop sys.boot_completed 2>/dev/null | grep -q 1; do sleep 5; echo "Waiting for emulator..."; done'
          
          # Unlock device
          adb shell input keyevent 82
          
          # Install APK
          adb install -t -g ${{ env.ROOT }}/apps/app.apk
          
          # Run tests with increased timeout
          robot --exitonfailure --exitonerror --timestampoutputs \
            -d ${{ env.ROOT }}/reports \
            -v APPIUM_PORT:4725 \
            -v APK_PATH:${{ env.ROOT }}/apps/app.apk \
            ${{ env.ROOT }}/test_cases/

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports
          path: ${{ env.ROOT }}/reports