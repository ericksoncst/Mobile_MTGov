name: Android Emulator Tests with Appium

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  android-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 🔧 Install Android SDK and Tools
        run: |
          # Set up directories
          export ANDROID_HOME="$HOME/android-sdk"
          mkdir -p "$ANDROID_HOME"
          
          # Download command line tools
          cd "$ANDROID_HOME"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip -q commandlinetools-linux-10406996_latest.zip
          rm commandlinetools-linux-10406996_latest.zip
          
          # Move tools to correct location
          mkdir -p cmdline-tools/latest
          mv tools/* cmdline-tools/latest/
          rm -rf tools
          
          # Add to PATH
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV

      - name: 📦 Install Android Platform Tools
        run: |
          # Accept licenses first
          mkdir -p "$ANDROID_HOME/licenses"
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_HOME/licenses/android-sdk-license"
          
          # Install necessary packages
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "emulator" \
            "platforms;android-30" \
            "system-images;android-30;google_apis;x86_64"
          
          # Verify installation
          adb version
          emulator -version

      - name: 📱 Create and Start Emulator
        run: |
          # Create AVD
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            --name test \
            --package "system-images;android-30;google_apis;x86_64" \
            --device "pixel_4" \
            --force
          
          # Start emulator
          nohup $ANDROID_HOME/emulator/emulator \
            -avd test \
            -no-audio \
            -no-window \
            -gpu swiftshader_indirect \
            -camera-back none \
            -camera-front none > /dev/null 2>&1 &
            
          # Wait for emulator
          adb wait-for-device
          while [ "$(adb shell getprop sys.boot_completed | tr -d '\r')" != "1" ]; do
            sleep 10
            echo "⌛ Waiting for emulator to boot..."
          done
          
          # Disable animations
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0

      - name: 🌐 Install Appium
        run: |
          sudo npm install -g appium
          appium driver install uiautomator2
          appium --version

      - name: 🚀 Start Appium Server
        run: |
          appium --relaxed-security --base-path /wd/hub --log-timestamp --local-timezone > appium.log 2>&1 &
          echo "APPIUM_PID=$!" >> $GITHUB_ENV
          sleep 15
          echo "Appium server started with PID $APPIUM_PID"

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install Python Dependencies
        run: |
          pip install -r requirements.txt
          pip install robotframework robotframework-appiumlibrary

      - name: 🧪 Execute Tests
        timeout-minutes: 20
        run: |
          mkdir -p results
          echo "🔍 Verifying connections..."
          adb devices
          curl -f http://localhost:4723/wd/hub/status
          
          echo "🏃 Starting tests..."
          robot --variable DEVICE_NAME:emulator-5554 \
                --variable PLATFORM_VERSION:11.0 \
                --variable APPIUM_URL:http://localhost:4723/wd/hub \
                --outputdir results \
                test_cases || true

      - name: 📤 Upload Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            results/*
            appium.log

      - name: 🛑 Cleanup
        if: always()
        run: |
          kill $APPIUM_PID || true
          adb emu kill || true